name: Build and Deploy Client

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/client/**'
      - 'packages/**'
      - 'package.json'
      - 'turbo.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/client/**'
      - 'packages/**'
      - 'package.json'
      - 'turbo.json'

env:
  AWS_REGION: ap-south-1
  S3_BUCKET: games-gaurav
  S3_FOLDER: fruit-blast
  NODE_VERSION: 18
  CLOUDFRONT_DISTRIBUTION_ID: E3KOZ0WTSBRTAH

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üì¶ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: üì• Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: üõ†Ô∏è Build client
        run: pnpm turbo build --filter=client

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ‚òÅÔ∏è Upload index.html with no-store cache
        run: |
          aws s3 cp apps/client/dist/index.html s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/index.html \
            --content-type text/html \
            --cache-control "no-store"

      - name: ‚òÅÔ∏è Upload other assets with correct MIME types and immutable cache
        run: |
          upload_with_mime_type() {
            local pattern="$1"
            local mime_type="$2"

            matches=$(find apps/client/dist -type f -name "$pattern")
            if [[ -n "$matches" ]]; then
              while IFS= read -r file; do
                rel_path="${file#apps/client/dist/}"
                aws s3 cp "$file" "s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/$rel_path" \
                  --content-type "$mime_type" \
                  --cache-control "public,max-age=31536000,immutable"
              done <<< "$matches"
            fi
          }

          # --- Web Assets ---
          upload_with_mime_type "*.js" "application/javascript"
          upload_with_mime_type "*.mjs" "application/javascript"
          upload_with_mime_type "*.css" "text/css"
          upload_with_mime_type "*.html" "text/html"
          upload_with_mime_type "*.json" "application/json"

          # --- Images ---
          upload_with_mime_type "*.png" "image/png"
          upload_with_mime_type "*.jpg" "image/jpeg"
          upload_with_mime_type "*.jpeg" "image/jpeg"
          upload_with_mime_type "*.svg" "image/svg+xml"
          upload_with_mime_type "*.gif" "image/gif"
          upload_with_mime_type "*.webp" "image/webp"
          upload_with_mime_type "*.ico" "image/x-icon"

          # --- Fonts ---
          upload_with_mime_type "*.woff" "font/woff"
          upload_with_mime_type "*.woff2" "font/woff2"
          upload_with_mime_type "*.ttf" "font/ttf"
          upload_with_mime_type "*.otf" "font/otf"
          upload_with_mime_type "*.eot" "application/vnd.ms-fontobject"

          # --- Game/Model/WebAssembly ---
          upload_with_mime_type "*.unity3d" "application/vnd.unity"
          upload_with_mime_type "*.glb" "model/gltf-binary"
          upload_with_mime_type "*.gltf" "model/gltf+json"
          upload_with_mime_type "*.fbx" "application/octet-stream"
          upload_with_mime_type "*.wasm" "application/wasm"

          # --- Fallback: Upload remaining + cleanup old ---
          aws s3 sync apps/client/dist s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/ \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable" \
            --delete

      - name: üöÄ Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/${{ env.S3_FOLDER }}/*"

      - name: ‚úÖ Deployment Summary
        run: |
          echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **S3 Path**: \`${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/\`" >> $GITHUB_STEP_SUMMARY
          echo "- **CloudFront**: [View Live](https://d1wtlk5xmpy0nd.cloudfront.net/${{ env.S3_FOLDER }}/)" >> $GITHUB_STEP_SUMMARY
